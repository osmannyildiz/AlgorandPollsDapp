{
  "version": 3,
  "sources": [
    "../../poll_manager/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBQ;AAAoB;;;;;;;;;;AAApB;AAHR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;AAAA;;AA+CK;;AAAA;AAAA;AAAA;;AAAA;AA/CL;;;AAAA;;;AA+CK;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAzCL;;;AAAA;;;AAyCK;;;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAnCL;;;AAAA;;;AAmCK;;;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AA7BL;;;AAAA;;;AA6BK;;;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAvBL;;;AAAA;;;AAuBK;;;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAjBL;;;AAAA;;;AAiBK;;;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AATL;;;AASK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AALL;;;AAAA;;;AAKK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALL;;AAAA;;;;;;;;;AAKA;;;AAEe;;;;;;;;;AAAA;;AAAA;AAAP;AAER;;;AAK4B;AAAA;AAAA;AAAA;AAApB;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACgC;AAA2B;AAA3B;AAAZ;AAApB;AAAA;AAAA;;AAER;;;AAEmB;;AAAA;;AAAA;;;AAAJ;AAAP;AAC0D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAqD;AAArD;AAAZ;AAA9C;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;AAEmB;;AAAA;;AAAA;;;AAAJ;AAAP;AAC0D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAqD;AAArD;AAAZ;AAA9C;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;AAEmB;;AAAA;;AAAA;;;AAAJ;AAAP;AAC0D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAqD;AAArD;AAAZ;AAA9C;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;AAEmB;;AAAA;;AAAA;;;AAAJ;AAAP;AAC0D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAqD;AAArD;AAAZ;AAA9C;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;AAEmB;;AAAA;;AAAA;;;AAAJ;AAAP;AAC0D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAqD;AAArD;AAAZ;AAA9C;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;;;AAEgB;AACK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAArB;AAAA;;AAAA;;AAAA;;AAAA;;;;;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACe;;AAAA;AAAf;;;AACwB;;;AAEhB;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 32 52"
    },
    "7": {
      "op": "bytecblock \"polls\" \"next_poll_id\" 0x151f7c75"
    },
    "33": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "35": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "38": {
      "op": "bytec_1 // \"next_poll_id\"",
      "defined_out": [
        "\"next_poll_id\""
      ],
      "stack_out": [
        "\"next_poll_id\""
      ]
    },
    "39": {
      "op": "pushbytes 0x0000000000000001",
      "defined_out": [
        "\"next_poll_id\"",
        "0x0000000000000001"
      ],
      "stack_out": [
        "\"next_poll_id\"",
        "0x0000000000000001"
      ]
    },
    "49": {
      "op": "app_global_put",
      "stack_out": []
    },
    "50": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "52": {
      "op": "bz main_bare_routing@13",
      "stack_out": []
    },
    "55": {
      "op": "pushbytess 0x02bece11 0x55240f17 0x5502a79b 0x44385ae5 0xa6b19f61 0x172054db 0xd9facc2f 0x86926aba // method \"hello(string)string\", method \"create_poll((string,string,string,string,string,string,uint64,uint64,uint64,uint64,uint64,address[]))void\", method \"vote_option_1(uint64,address)void\", method \"vote_option_2(uint64,address)void\", method \"vote_option_3(uint64,address)void\", method \"vote_option_4(uint64,address)void\", method \"vote_option_5(uint64,address)void\", method \"did_vote(uint64,address)bool\"",
      "defined_out": [
        "Method(create_poll((string,string,string,string,string,string,uint64,uint64,uint64,uint64,uint64,address[]))void)",
        "Method(did_vote(uint64,address)bool)",
        "Method(hello(string)string)",
        "Method(vote_option_1(uint64,address)void)",
        "Method(vote_option_2(uint64,address)void)",
        "Method(vote_option_3(uint64,address)void)",
        "Method(vote_option_4(uint64,address)void)",
        "Method(vote_option_5(uint64,address)void)"
      ],
      "stack_out": [
        "Method(hello(string)string)",
        "Method(create_poll((string,string,string,string,string,string,uint64,uint64,uint64,uint64,uint64,address[]))void)",
        "Method(vote_option_1(uint64,address)void)",
        "Method(vote_option_2(uint64,address)void)",
        "Method(vote_option_3(uint64,address)void)",
        "Method(vote_option_4(uint64,address)void)",
        "Method(vote_option_5(uint64,address)void)",
        "Method(did_vote(uint64,address)bool)"
      ]
    },
    "97": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create_poll((string,string,string,string,string,string,uint64,uint64,uint64,uint64,uint64,address[]))void)",
        "Method(did_vote(uint64,address)bool)",
        "Method(hello(string)string)",
        "Method(vote_option_1(uint64,address)void)",
        "Method(vote_option_2(uint64,address)void)",
        "Method(vote_option_3(uint64,address)void)",
        "Method(vote_option_4(uint64,address)void)",
        "Method(vote_option_5(uint64,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(hello(string)string)",
        "Method(create_poll((string,string,string,string,string,string,uint64,uint64,uint64,uint64,uint64,address[]))void)",
        "Method(vote_option_1(uint64,address)void)",
        "Method(vote_option_2(uint64,address)void)",
        "Method(vote_option_3(uint64,address)void)",
        "Method(vote_option_4(uint64,address)void)",
        "Method(vote_option_5(uint64,address)void)",
        "Method(did_vote(uint64,address)bool)",
        "tmp%2#0"
      ]
    },
    "100": {
      "op": "match main_hello_route@5 main_create_poll_route@6 main_vote_option_1_route@7 main_vote_option_2_route@8 main_vote_option_3_route@9 main_vote_option_4_route@10 main_vote_option_5_route@11 main_did_vote_route@12",
      "stack_out": []
    },
    "118": {
      "block": "main_after_if_else@15",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "119": {
      "op": "return",
      "stack_out": []
    },
    "120": {
      "block": "main_did_vote_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "122": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "123": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "124": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "126": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "127": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "130": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%5#0",
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0",
        "reinterpret_bytes[32]%5#0"
      ]
    },
    "133": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "op": "callsub did_vote",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "136": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "0x00"
      ]
    },
    "139": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "0x00",
        "0"
      ]
    },
    "140": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%1#0"
      ]
    },
    "142": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "143": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "0x151f7c75"
      ]
    },
    "144": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ]
    },
    "145": {
      "op": "concat",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "146": {
      "op": "log",
      "stack_out": []
    },
    "147": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "148": {
      "op": "return",
      "stack_out": []
    },
    "149": {
      "block": "main_vote_option_5_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "151": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "152": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "153": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "155": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "156": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "159": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%4#0",
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[32]%4#0"
      ]
    },
    "162": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.vote_option_5",
      "op": "callsub vote_option_5",
      "stack_out": []
    },
    "165": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "166": {
      "op": "return",
      "stack_out": []
    },
    "167": {
      "block": "main_vote_option_4_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "169": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "170": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "171": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "173": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "174": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "177": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%3#0"
      ]
    },
    "180": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.vote_option_4",
      "op": "callsub vote_option_4",
      "stack_out": []
    },
    "183": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "184": {
      "op": "return",
      "stack_out": []
    },
    "185": {
      "block": "main_vote_option_3_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "187": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "188": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "189": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "191": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "192": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "195": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "198": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.vote_option_3",
      "op": "callsub vote_option_3",
      "stack_out": []
    },
    "201": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "202": {
      "op": "return",
      "stack_out": []
    },
    "203": {
      "block": "main_vote_option_2_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "205": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "206": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "207": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "209": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "210": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "213": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "216": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.vote_option_2",
      "op": "callsub vote_option_2",
      "stack_out": []
    },
    "219": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "220": {
      "op": "return",
      "stack_out": []
    },
    "221": {
      "block": "main_vote_option_1_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "223": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "224": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "225": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "227": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "228": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "231": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "234": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.vote_option_1",
      "op": "callsub vote_option_1",
      "stack_out": []
    },
    "237": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "238": {
      "op": "return",
      "stack_out": []
    },
    "239": {
      "block": "main_create_poll_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "241": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "242": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "243": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "245": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "246": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "249": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.create_poll",
      "op": "callsub create_poll",
      "stack_out": []
    },
    "252": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "253": {
      "op": "return",
      "stack_out": []
    },
    "254": {
      "block": "main_hello_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "256": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "257": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "258": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "260": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "261": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "264": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "267": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.hello",
      "op": "callsub hello",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "270": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "271": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "272": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "273": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "276": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "277": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "278": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "279": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "280": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "281": {
      "op": "log",
      "stack_out": []
    },
    "282": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "283": {
      "op": "return",
      "stack_out": []
    },
    "284": {
      "block": "main_bare_routing@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "286": {
      "op": "bnz main_after_if_else@15",
      "stack_out": []
    },
    "289": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "291": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "292": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "293": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "294": {
      "op": "return",
      "stack_out": []
    },
    "295": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.hello",
      "params": {
        "name#0": "bytes"
      },
      "block": "hello",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "298": {
      "op": "pushbytes \"Hello, \"",
      "defined_out": [
        "\"Hello, \""
      ],
      "stack_out": [
        "\"Hello, \""
      ]
    },
    "307": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ],
      "stack_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ]
    },
    "309": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "310": {
      "retsub": true,
      "op": "retsub"
    },
    "311": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.create_poll",
      "params": {
        "poll_data#0": "bytes"
      },
      "block": "create_poll",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "314": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "315": {
      "op": "bytec_1 // \"next_poll_id\"",
      "defined_out": [
        "\"next_poll_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"next_poll_id\""
      ]
    },
    "316": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "317": {
      "error": "check self.next_poll_id exists",
      "op": "assert // check self.next_poll_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "318": {
      "op": "bytec_0 // \"polls\"",
      "defined_out": [
        "\"polls\"",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "\"polls\""
      ]
    },
    "319": {
      "op": "dig 1",
      "defined_out": [
        "\"polls\"",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "\"polls\"",
        "maybe_value%0#0 (copy)"
      ]
    },
    "321": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "322": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "323": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "324": {
      "op": "pop",
      "stack_out": [
        "maybe_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "325": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "poll_data#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "box_prefixed_key%0#0",
        "poll_data#0 (copy)"
      ]
    },
    "327": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "328": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "329": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "330": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "331": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "332": {
      "op": "bytec_1 // \"next_poll_id\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "\"next_poll_id\""
      ]
    },
    "333": {
      "op": "swap",
      "stack_out": [
        "\"next_poll_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "334": {
      "op": "app_global_put",
      "stack_out": []
    },
    "335": {
      "retsub": true,
      "op": "retsub"
    },
    "336": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.vote_option_1",
      "params": {
        "poll_id#0": "bytes",
        "caller#0": "bytes"
      },
      "block": "vote_option_1",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "339": {
      "op": "frame_dig -2",
      "defined_out": [
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)"
      ]
    },
    "341": {
      "op": "frame_dig -1",
      "defined_out": [
        "caller#0 (copy)",
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)",
        "caller#0 (copy)"
      ]
    },
    "343": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "op": "callsub did_vote",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "346": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "347": {
      "error": "Already voted",
      "op": "assert // Already voted",
      "stack_out": []
    },
    "348": {
      "op": "bytec_0 // \"polls\"",
      "defined_out": [
        "\"polls\""
      ],
      "stack_out": [
        "\"polls\""
      ]
    },
    "349": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"polls\"",
        "poll_id#0 (copy)"
      ]
    },
    "351": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "352": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "353": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "354": {
      "error": "check self.box_map_struct entry exists",
      "op": "assert // check self.box_map_struct entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "355": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "356": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "12"
      ]
    },
    "358": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "359": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "1"
      ]
    },
    "360": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ]
    },
    "361": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "362": {
      "op": "replace2 12",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "364": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "366": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "367": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "368": {
      "op": "dup2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0 (copy)"
      ]
    },
    "369": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "370": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "371": {
      "op": "intc_3 // 52",
      "defined_out": [
        "52",
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)",
        "52"
      ]
    },
    "372": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0"
      ]
    },
    "373": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "375": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "376": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "378": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "item_start_offset%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)"
      ]
    },
    "380": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)",
        "item_end_offset%0#0"
      ]
    },
    "382": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "tmp%4#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "tmp%4#0"
      ]
    },
    "383": {
      "op": "extract 2 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "expr_value_trimmed%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "386": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0",
        "caller#0 (copy)"
      ]
    },
    "388": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0"
      ]
    },
    "389": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "390": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "391": {
      "op": "intc_2 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "392": {
      "op": "/",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "393": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "394": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "397": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "398": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0"
      ]
    },
    "399": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0"
      ]
    },
    "401": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0"
      ]
    },
    "402": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0",
        "item_start_offset%0#0"
      ]
    },
    "404": {
      "op": "extract3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "405": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "concat_result%0#0"
      ]
    },
    "406": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "407": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "409": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "{box_del}"
      ]
    },
    "410": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "411": {
      "op": "box_put",
      "stack_out": []
    },
    "412": {
      "retsub": true,
      "op": "retsub"
    },
    "413": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.vote_option_2",
      "params": {
        "poll_id#0": "bytes",
        "caller#0": "bytes"
      },
      "block": "vote_option_2",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "416": {
      "op": "frame_dig -2",
      "defined_out": [
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)"
      ]
    },
    "418": {
      "op": "frame_dig -1",
      "defined_out": [
        "caller#0 (copy)",
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)",
        "caller#0 (copy)"
      ]
    },
    "420": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "op": "callsub did_vote",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "423": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "424": {
      "error": "Already voted",
      "op": "assert // Already voted",
      "stack_out": []
    },
    "425": {
      "op": "bytec_0 // \"polls\"",
      "defined_out": [
        "\"polls\""
      ],
      "stack_out": [
        "\"polls\""
      ]
    },
    "426": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"polls\"",
        "poll_id#0 (copy)"
      ]
    },
    "428": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "429": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "430": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "431": {
      "error": "check self.box_map_struct entry exists",
      "op": "assert // check self.box_map_struct entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "432": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "433": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "20"
      ]
    },
    "435": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "436": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "1"
      ]
    },
    "437": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ]
    },
    "438": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "439": {
      "op": "replace2 20",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "441": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "443": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "444": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "445": {
      "op": "dup2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0 (copy)"
      ]
    },
    "446": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "447": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "448": {
      "op": "intc_3 // 52",
      "defined_out": [
        "52",
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)",
        "52"
      ]
    },
    "449": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0"
      ]
    },
    "450": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "452": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "453": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "455": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "item_start_offset%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)"
      ]
    },
    "457": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)",
        "item_end_offset%0#0"
      ]
    },
    "459": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "tmp%4#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "tmp%4#0"
      ]
    },
    "460": {
      "op": "extract 2 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "expr_value_trimmed%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "463": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0",
        "caller#0 (copy)"
      ]
    },
    "465": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0"
      ]
    },
    "466": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "467": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "468": {
      "op": "intc_2 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "469": {
      "op": "/",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "470": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "471": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "474": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "475": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0"
      ]
    },
    "476": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0"
      ]
    },
    "478": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0"
      ]
    },
    "479": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0",
        "item_start_offset%0#0"
      ]
    },
    "481": {
      "op": "extract3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "482": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "concat_result%0#0"
      ]
    },
    "483": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "484": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "486": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "{box_del}"
      ]
    },
    "487": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "488": {
      "op": "box_put",
      "stack_out": []
    },
    "489": {
      "retsub": true,
      "op": "retsub"
    },
    "490": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.vote_option_3",
      "params": {
        "poll_id#0": "bytes",
        "caller#0": "bytes"
      },
      "block": "vote_option_3",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "493": {
      "op": "frame_dig -2",
      "defined_out": [
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)"
      ]
    },
    "495": {
      "op": "frame_dig -1",
      "defined_out": [
        "caller#0 (copy)",
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)",
        "caller#0 (copy)"
      ]
    },
    "497": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "op": "callsub did_vote",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "500": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "501": {
      "error": "Already voted",
      "op": "assert // Already voted",
      "stack_out": []
    },
    "502": {
      "op": "bytec_0 // \"polls\"",
      "defined_out": [
        "\"polls\""
      ],
      "stack_out": [
        "\"polls\""
      ]
    },
    "503": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"polls\"",
        "poll_id#0 (copy)"
      ]
    },
    "505": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "506": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "507": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "508": {
      "error": "check self.box_map_struct entry exists",
      "op": "assert // check self.box_map_struct entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "509": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "510": {
      "op": "pushint 28 // 28",
      "defined_out": [
        "28",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "28"
      ]
    },
    "512": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "513": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "1"
      ]
    },
    "514": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ]
    },
    "515": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "516": {
      "op": "replace2 28",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "518": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "520": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "521": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "522": {
      "op": "dup2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0 (copy)"
      ]
    },
    "523": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "524": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "525": {
      "op": "intc_3 // 52",
      "defined_out": [
        "52",
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)",
        "52"
      ]
    },
    "526": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0"
      ]
    },
    "527": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "529": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "530": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "532": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "item_start_offset%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)"
      ]
    },
    "534": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)",
        "item_end_offset%0#0"
      ]
    },
    "536": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "tmp%4#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "tmp%4#0"
      ]
    },
    "537": {
      "op": "extract 2 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "expr_value_trimmed%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "540": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0",
        "caller#0 (copy)"
      ]
    },
    "542": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0"
      ]
    },
    "543": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "544": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "545": {
      "op": "intc_2 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "546": {
      "op": "/",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "547": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "548": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "551": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "552": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0"
      ]
    },
    "553": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0"
      ]
    },
    "555": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0"
      ]
    },
    "556": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0",
        "item_start_offset%0#0"
      ]
    },
    "558": {
      "op": "extract3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "559": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "concat_result%0#0"
      ]
    },
    "560": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "561": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "563": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "{box_del}"
      ]
    },
    "564": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "565": {
      "op": "box_put",
      "stack_out": []
    },
    "566": {
      "retsub": true,
      "op": "retsub"
    },
    "567": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.vote_option_4",
      "params": {
        "poll_id#0": "bytes",
        "caller#0": "bytes"
      },
      "block": "vote_option_4",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "570": {
      "op": "frame_dig -2",
      "defined_out": [
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)"
      ]
    },
    "572": {
      "op": "frame_dig -1",
      "defined_out": [
        "caller#0 (copy)",
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)",
        "caller#0 (copy)"
      ]
    },
    "574": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "op": "callsub did_vote",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "577": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "578": {
      "error": "Already voted",
      "op": "assert // Already voted",
      "stack_out": []
    },
    "579": {
      "op": "bytec_0 // \"polls\"",
      "defined_out": [
        "\"polls\""
      ],
      "stack_out": [
        "\"polls\""
      ]
    },
    "580": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"polls\"",
        "poll_id#0 (copy)"
      ]
    },
    "582": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "583": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "584": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "585": {
      "error": "check self.box_map_struct entry exists",
      "op": "assert // check self.box_map_struct entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "586": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "587": {
      "op": "pushint 36 // 36",
      "defined_out": [
        "36",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "36"
      ]
    },
    "589": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "590": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "1"
      ]
    },
    "591": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ]
    },
    "592": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "593": {
      "op": "replace2 36",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "595": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "597": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "598": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "599": {
      "op": "dup2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0 (copy)"
      ]
    },
    "600": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "601": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "602": {
      "op": "intc_3 // 52",
      "defined_out": [
        "52",
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)",
        "52"
      ]
    },
    "603": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0"
      ]
    },
    "604": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "606": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "607": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "609": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "item_start_offset%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)"
      ]
    },
    "611": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)",
        "item_end_offset%0#0"
      ]
    },
    "613": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "tmp%4#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "tmp%4#0"
      ]
    },
    "614": {
      "op": "extract 2 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "expr_value_trimmed%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "617": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0",
        "caller#0 (copy)"
      ]
    },
    "619": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0"
      ]
    },
    "620": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "621": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "622": {
      "op": "intc_2 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "623": {
      "op": "/",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "624": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "625": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "628": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "629": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0"
      ]
    },
    "630": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0"
      ]
    },
    "632": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0"
      ]
    },
    "633": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0",
        "item_start_offset%0#0"
      ]
    },
    "635": {
      "op": "extract3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "636": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "concat_result%0#0"
      ]
    },
    "637": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "638": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "640": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "{box_del}"
      ]
    },
    "641": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "642": {
      "op": "box_put",
      "stack_out": []
    },
    "643": {
      "retsub": true,
      "op": "retsub"
    },
    "644": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.vote_option_5",
      "params": {
        "poll_id#0": "bytes",
        "caller#0": "bytes"
      },
      "block": "vote_option_5",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "647": {
      "op": "frame_dig -2",
      "defined_out": [
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)"
      ]
    },
    "649": {
      "op": "frame_dig -1",
      "defined_out": [
        "caller#0 (copy)",
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)",
        "caller#0 (copy)"
      ]
    },
    "651": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "op": "callsub did_vote",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "654": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "655": {
      "error": "Already voted",
      "op": "assert // Already voted",
      "stack_out": []
    },
    "656": {
      "op": "bytec_0 // \"polls\"",
      "defined_out": [
        "\"polls\""
      ],
      "stack_out": [
        "\"polls\""
      ]
    },
    "657": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"polls\"",
        "poll_id#0 (copy)"
      ]
    },
    "659": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "660": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "661": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "662": {
      "error": "check self.box_map_struct entry exists",
      "op": "assert // check self.box_map_struct entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "663": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "664": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "44"
      ]
    },
    "666": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "667": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "1"
      ]
    },
    "668": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ]
    },
    "669": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "670": {
      "op": "replace2 44",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "672": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "674": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "675": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "676": {
      "op": "dup2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0 (copy)"
      ]
    },
    "677": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "678": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "679": {
      "op": "intc_3 // 52",
      "defined_out": [
        "52",
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)",
        "52"
      ]
    },
    "680": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0"
      ]
    },
    "681": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "683": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "684": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "686": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "item_start_offset%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)"
      ]
    },
    "688": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)",
        "item_end_offset%0#0"
      ]
    },
    "690": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "tmp%4#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "tmp%4#0"
      ]
    },
    "691": {
      "op": "extract 2 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "expr_value_trimmed%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "694": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0",
        "caller#0 (copy)"
      ]
    },
    "696": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0"
      ]
    },
    "697": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "698": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "699": {
      "op": "intc_2 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "700": {
      "op": "/",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "701": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "702": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "705": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "706": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0"
      ]
    },
    "707": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0"
      ]
    },
    "709": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0"
      ]
    },
    "710": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0",
        "item_start_offset%0#0"
      ]
    },
    "712": {
      "op": "extract3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "713": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "concat_result%0#0"
      ]
    },
    "714": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "715": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "717": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "{box_del}"
      ]
    },
    "718": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "719": {
      "op": "box_put",
      "stack_out": []
    },
    "720": {
      "retsub": true,
      "op": "retsub"
    },
    "721": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "params": {
        "poll_id#0": "bytes",
        "caller#0": "bytes"
      },
      "block": "did_vote",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "724": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "found#5"
      ]
    },
    "726": {
      "op": "intc_1 // 0"
    },
    "727": {
      "op": "bytec_0 // \"polls\""
    },
    "728": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"polls\"",
        "found#0",
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "\"polls\"",
        "poll_id#0 (copy)"
      ]
    },
    "730": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "found#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "box_prefixed_key%0#0"
      ]
    },
    "731": {
      "op": "box_get",
      "defined_out": [
        "found#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "732": {
      "error": "check self.box_map_struct entry exists",
      "op": "assert // check self.box_map_struct entry exists",
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0"
      ]
    },
    "733": {
      "op": "dup",
      "defined_out": [
        "found#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "734": {
      "op": "intc_3 // 52",
      "defined_out": [
        "52",
        "found#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "52"
      ]
    },
    "735": {
      "op": "extract_uint16",
      "defined_out": [
        "found#0",
        "item_start_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0",
        "item_start_offset%0#0"
      ]
    },
    "736": {
      "op": "dig 1",
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "738": {
      "op": "len",
      "defined_out": [
        "found#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "739": {
      "op": "substring3",
      "defined_out": [
        "found#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0"
      ]
    },
    "740": {
      "op": "dup",
      "defined_out": [
        "found#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "741": {
      "op": "intc_1 // 0",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "tmp%0#0",
        "0"
      ]
    },
    "742": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "found#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0"
      ]
    },
    "743": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_length%0#0",
        "found#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "744": {
      "block": "did_vote_for_header@1",
      "stack_in": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "746": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "748": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "749": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "found#5",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0",
        "found#5"
      ]
    },
    "751": {
      "op": "frame_bury 0",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "found#5",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "753": {
      "op": "bz did_vote_after_for@6",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "756": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "found#5",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "758": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "found#5",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "761": {
      "op": "frame_dig 4",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "763": {
      "op": "intc_2 // 32",
      "defined_out": [
        "32",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "found#5",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "32"
      ]
    },
    "764": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "found#5",
        "item_index_internal%0#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "765": {
      "op": "intc_2 // 32",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "32"
      ]
    },
    "766": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "array_length%0#0",
        "found#5",
        "item_index_internal%0#0",
        "tmp%0#0",
        "voter#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "voter#0"
      ]
    },
    "767": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length%0#0",
        "caller#0 (copy)",
        "found#5",
        "item_index_internal%0#0",
        "tmp%0#0",
        "voter#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "voter#0",
        "caller#0 (copy)"
      ]
    },
    "769": {
      "op": "==",
      "defined_out": [
        "array_length%0#0",
        "found#5",
        "item_index_internal%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "770": {
      "op": "bz did_vote_after_if_else@4",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "773": {
      "op": "intc_0 // 1",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "found#5"
      ]
    },
    "774": {
      "op": "frame_bury 0",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "776": {
      "block": "did_vote_after_for@6",
      "stack_in": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "found#0"
      ]
    },
    "777": {
      "block": "did_vote_after_if_else@4",
      "stack_in": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "779": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "780": {
      "op": "+",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "781": {
      "op": "frame_bury 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "783": {
      "op": "b did_vote_for_header@1"
    }
  }
}