{
  "version": 3,
  "sources": [
    "../../poll_manager/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBQ;AAAoB;;;;;;;;;;AAApB;AAHR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;AAAA;;AAmDK;;AAAA;AAAA;AAAA;;AAAA;AAnDL;;;AAAA;;;AAmDK;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AA5CL;;;AAAA;;;AA4CK;;;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AArCL;;;AAAA;;;AAqCK;;;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AA9BL;;;AAAA;;;AA8BK;;;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAxBL;;;AAAA;;;AAwBK;;;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAlBL;;;AAAA;;;AAkBK;;;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AATL;;;AASK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AALL;;;AAAA;;;AAKK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALL;;AAAA;;;;;;;;;AAKA;;;AAEe;;;;;;;;;AAAA;;AAAA;AAAP;AAER;;;AAKuB;AAAA;AAAA;AAAA;AAAf;;AAAA;;AAAA;;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACgC;AAA2B;AAA3B;AAAZ;AAApB;AAAA;AAAA;;AAER;;;AAEmB;;AAAA;;AAAA;;;AAAJ;AAAP;AAC0D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAqD;AAArD;AAAZ;AAA9C;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;AAEmB;;AAAA;;AAAA;;;AAAJ;AAAP;AAC0D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAqD;AAArD;AAAZ;AAA9C;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;AAEmB;;AAAA;;AAAA;;;AAAJ;AAAP;AACO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAyC;AAAzC;AAAP;AAC0D;AAAA;;AAAA;AAAqD;AAArD;AAAZ;AAA9C;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;AAEmB;;AAAA;;AAAA;;;AAAJ;AAAP;AACO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAyC;AAAzC;AAAP;AAC0D;AAAA;;AAAA;AAAqD;AAArD;AAAZ;AAA9C;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;AAEmB;;AAAA;;AAAA;;;AAAJ;AAAP;AACO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAyC;AAAzC;AAAP;AAC0D;AAAA;;AAAA;AAAqD;AAArD;AAAZ;AAA9C;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;;;AAEgB;AACK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAArB;AAAA;;AAAA;;AAAA;;AAAA;;;;;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACe;;AAAA;AAAf;;;AACwB;;;AAEhB;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 60 32"
    },
    "7": {
      "op": "bytecblock \"polls\" \"next_poll_id\" 0x0000 0x151f7c75"
    },
    "36": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "38": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "41": {
      "op": "bytec_1 // \"next_poll_id\"",
      "defined_out": [
        "\"next_poll_id\""
      ],
      "stack_out": [
        "\"next_poll_id\""
      ]
    },
    "42": {
      "op": "pushbytes 0x0000000000000001",
      "defined_out": [
        "\"next_poll_id\"",
        "0x0000000000000001"
      ],
      "stack_out": [
        "\"next_poll_id\"",
        "0x0000000000000001"
      ]
    },
    "52": {
      "op": "app_global_put",
      "stack_out": []
    },
    "53": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "55": {
      "op": "bz main_bare_routing@13",
      "stack_out": []
    },
    "58": {
      "op": "pushbytess 0x02bece11 0x9574d978 0x5502a79b 0x44385ae5 0xa6b19f61 0x172054db 0xd9facc2f 0x86926aba // method \"hello(string)string\", method \"create_poll((uint64,string,string,string,string,string,string,uint64,uint64,uint64,uint64,uint64,address[]))void\", method \"vote_option_1(uint64,address)void\", method \"vote_option_2(uint64,address)void\", method \"vote_option_3(uint64,address)void\", method \"vote_option_4(uint64,address)void\", method \"vote_option_5(uint64,address)void\", method \"did_vote(uint64,address)bool\"",
      "defined_out": [
        "Method(create_poll((uint64,string,string,string,string,string,string,uint64,uint64,uint64,uint64,uint64,address[]))void)",
        "Method(did_vote(uint64,address)bool)",
        "Method(hello(string)string)",
        "Method(vote_option_1(uint64,address)void)",
        "Method(vote_option_2(uint64,address)void)",
        "Method(vote_option_3(uint64,address)void)",
        "Method(vote_option_4(uint64,address)void)",
        "Method(vote_option_5(uint64,address)void)"
      ],
      "stack_out": [
        "Method(hello(string)string)",
        "Method(create_poll((uint64,string,string,string,string,string,string,uint64,uint64,uint64,uint64,uint64,address[]))void)",
        "Method(vote_option_1(uint64,address)void)",
        "Method(vote_option_2(uint64,address)void)",
        "Method(vote_option_3(uint64,address)void)",
        "Method(vote_option_4(uint64,address)void)",
        "Method(vote_option_5(uint64,address)void)",
        "Method(did_vote(uint64,address)bool)"
      ]
    },
    "100": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create_poll((uint64,string,string,string,string,string,string,uint64,uint64,uint64,uint64,uint64,address[]))void)",
        "Method(did_vote(uint64,address)bool)",
        "Method(hello(string)string)",
        "Method(vote_option_1(uint64,address)void)",
        "Method(vote_option_2(uint64,address)void)",
        "Method(vote_option_3(uint64,address)void)",
        "Method(vote_option_4(uint64,address)void)",
        "Method(vote_option_5(uint64,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(hello(string)string)",
        "Method(create_poll((uint64,string,string,string,string,string,string,uint64,uint64,uint64,uint64,uint64,address[]))void)",
        "Method(vote_option_1(uint64,address)void)",
        "Method(vote_option_2(uint64,address)void)",
        "Method(vote_option_3(uint64,address)void)",
        "Method(vote_option_4(uint64,address)void)",
        "Method(vote_option_5(uint64,address)void)",
        "Method(did_vote(uint64,address)bool)",
        "tmp%2#0"
      ]
    },
    "103": {
      "op": "match main_hello_route@5 main_create_poll_route@6 main_vote_option_1_route@7 main_vote_option_2_route@8 main_vote_option_3_route@9 main_vote_option_4_route@10 main_vote_option_5_route@11 main_did_vote_route@12",
      "stack_out": []
    },
    "121": {
      "block": "main_after_if_else@15",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "122": {
      "op": "return",
      "stack_out": []
    },
    "123": {
      "block": "main_did_vote_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "125": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "126": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "127": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "129": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "130": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "133": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%5#0",
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0",
        "reinterpret_bytes[32]%5#0"
      ]
    },
    "136": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "op": "callsub did_vote",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "139": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "0x00"
      ]
    },
    "142": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "0x00",
        "0"
      ]
    },
    "143": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%1#0"
      ]
    },
    "145": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "146": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "0x151f7c75"
      ]
    },
    "147": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ]
    },
    "148": {
      "op": "concat",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "149": {
      "op": "log",
      "stack_out": []
    },
    "150": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "151": {
      "op": "return",
      "stack_out": []
    },
    "152": {
      "block": "main_vote_option_5_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "154": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "155": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "156": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "158": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "159": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "162": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%4#0",
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[32]%4#0"
      ]
    },
    "165": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.vote_option_5",
      "op": "callsub vote_option_5",
      "stack_out": []
    },
    "168": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "169": {
      "op": "return",
      "stack_out": []
    },
    "170": {
      "block": "main_vote_option_4_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "172": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "173": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "174": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "176": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "177": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "180": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%3#0"
      ]
    },
    "183": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.vote_option_4",
      "op": "callsub vote_option_4",
      "stack_out": []
    },
    "186": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "187": {
      "op": "return",
      "stack_out": []
    },
    "188": {
      "block": "main_vote_option_3_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "190": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "191": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "192": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "194": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "195": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "198": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "201": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.vote_option_3",
      "op": "callsub vote_option_3",
      "stack_out": []
    },
    "204": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "205": {
      "op": "return",
      "stack_out": []
    },
    "206": {
      "block": "main_vote_option_2_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "208": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "209": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "210": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "212": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "213": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "216": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "219": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.vote_option_2",
      "op": "callsub vote_option_2",
      "stack_out": []
    },
    "222": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "223": {
      "op": "return",
      "stack_out": []
    },
    "224": {
      "block": "main_vote_option_1_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "226": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "227": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "228": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "230": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "231": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "234": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "237": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.vote_option_1",
      "op": "callsub vote_option_1",
      "stack_out": []
    },
    "240": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "241": {
      "op": "return",
      "stack_out": []
    },
    "242": {
      "block": "main_create_poll_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "244": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "245": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "246": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "248": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "249": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "252": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.create_poll",
      "op": "callsub create_poll",
      "stack_out": []
    },
    "255": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "256": {
      "op": "return",
      "stack_out": []
    },
    "257": {
      "block": "main_hello_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "259": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "260": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "261": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "263": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "264": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "267": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "270": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.hello",
      "op": "callsub hello",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "273": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "274": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "275": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "276": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "279": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "280": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "281": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "282": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "283": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "284": {
      "op": "log",
      "stack_out": []
    },
    "285": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "286": {
      "op": "return",
      "stack_out": []
    },
    "287": {
      "block": "main_bare_routing@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "289": {
      "op": "bnz main_after_if_else@15",
      "stack_out": []
    },
    "292": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "294": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "295": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "296": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "297": {
      "op": "return",
      "stack_out": []
    },
    "298": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.hello",
      "params": {
        "name#0": "bytes"
      },
      "block": "hello",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "301": {
      "op": "pushbytes \"Hello, \"",
      "defined_out": [
        "\"Hello, \""
      ],
      "stack_out": [
        "\"Hello, \""
      ]
    },
    "310": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ],
      "stack_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ]
    },
    "312": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "313": {
      "retsub": true,
      "op": "retsub"
    },
    "314": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.create_poll",
      "params": {
        "poll_data#0": "bytes"
      },
      "block": "create_poll",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "317": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "318": {
      "op": "bytec_1 // \"next_poll_id\"",
      "defined_out": [
        "\"next_poll_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"next_poll_id\""
      ]
    },
    "319": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "320": {
      "error": "check self.next_poll_id exists",
      "op": "assert // check self.next_poll_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "321": {
      "op": "frame_dig -1",
      "defined_out": [
        "maybe_value%0#0",
        "poll_data#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "poll_data#0 (copy)"
      ]
    },
    "323": {
      "op": "dig 1",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "poll_data#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "poll_data#0 (copy)",
        "maybe_value%0#0 (copy)"
      ]
    },
    "325": {
      "op": "replace2 0",
      "defined_out": [
        "maybe_value%0#0",
        "poll_data#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "poll_data#0"
      ]
    },
    "327": {
      "op": "frame_bury -1",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "329": {
      "op": "bytec_0 // \"polls\"",
      "defined_out": [
        "\"polls\"",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "\"polls\""
      ]
    },
    "330": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "\"polls\"",
        "maybe_value%0#0 (copy)"
      ]
    },
    "332": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "333": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "334": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "335": {
      "op": "pop",
      "stack_out": [
        "maybe_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "336": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%0#0",
        "box_prefixed_key%0#0",
        "poll_data#0 (copy)"
      ]
    },
    "338": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "339": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "340": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "341": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "342": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "343": {
      "op": "bytec_1 // \"next_poll_id\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "\"next_poll_id\""
      ]
    },
    "344": {
      "op": "swap",
      "stack_out": [
        "\"next_poll_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "345": {
      "op": "app_global_put",
      "stack_out": []
    },
    "346": {
      "retsub": true,
      "op": "retsub"
    },
    "347": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.vote_option_1",
      "params": {
        "poll_id#0": "bytes",
        "caller#0": "bytes"
      },
      "block": "vote_option_1",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "350": {
      "op": "frame_dig -2",
      "defined_out": [
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)"
      ]
    },
    "352": {
      "op": "frame_dig -1",
      "defined_out": [
        "caller#0 (copy)",
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)",
        "caller#0 (copy)"
      ]
    },
    "354": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "op": "callsub did_vote",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "357": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "358": {
      "error": "Already voted",
      "op": "assert // Already voted",
      "stack_out": []
    },
    "359": {
      "op": "bytec_0 // \"polls\"",
      "defined_out": [
        "\"polls\""
      ],
      "stack_out": [
        "\"polls\""
      ]
    },
    "360": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"polls\"",
        "poll_id#0 (copy)"
      ]
    },
    "362": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "363": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "364": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "365": {
      "error": "check self.box_map_struct entry exists",
      "op": "assert // check self.box_map_struct entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "366": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "367": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "20"
      ]
    },
    "369": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "370": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "1"
      ]
    },
    "371": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ]
    },
    "372": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "373": {
      "op": "replace2 20",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "375": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "377": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "378": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "379": {
      "op": "dup2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0 (copy)"
      ]
    },
    "380": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "381": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "382": {
      "op": "intc_2 // 60",
      "defined_out": [
        "60",
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)",
        "60"
      ]
    },
    "383": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0"
      ]
    },
    "384": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "386": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "387": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "389": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "item_start_offset%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)"
      ]
    },
    "391": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)",
        "item_end_offset%0#0"
      ]
    },
    "393": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "tmp%4#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "tmp%4#0"
      ]
    },
    "394": {
      "op": "extract 2 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "expr_value_trimmed%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "397": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0",
        "caller#0 (copy)"
      ]
    },
    "399": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0"
      ]
    },
    "400": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "401": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "402": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "403": {
      "op": "/",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "404": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "405": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "408": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "409": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0"
      ]
    },
    "410": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0"
      ]
    },
    "412": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0"
      ]
    },
    "413": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0",
        "item_start_offset%0#0"
      ]
    },
    "415": {
      "op": "extract3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "416": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "concat_result%0#0"
      ]
    },
    "417": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "418": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "420": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "{box_del}"
      ]
    },
    "421": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "422": {
      "op": "box_put",
      "stack_out": []
    },
    "423": {
      "retsub": true,
      "op": "retsub"
    },
    "424": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.vote_option_2",
      "params": {
        "poll_id#0": "bytes",
        "caller#0": "bytes"
      },
      "block": "vote_option_2",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "427": {
      "op": "frame_dig -2",
      "defined_out": [
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)"
      ]
    },
    "429": {
      "op": "frame_dig -1",
      "defined_out": [
        "caller#0 (copy)",
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)",
        "caller#0 (copy)"
      ]
    },
    "431": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "op": "callsub did_vote",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "434": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "435": {
      "error": "Already voted",
      "op": "assert // Already voted",
      "stack_out": []
    },
    "436": {
      "op": "bytec_0 // \"polls\"",
      "defined_out": [
        "\"polls\""
      ],
      "stack_out": [
        "\"polls\""
      ]
    },
    "437": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"polls\"",
        "poll_id#0 (copy)"
      ]
    },
    "439": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "440": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "441": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "442": {
      "error": "check self.box_map_struct entry exists",
      "op": "assert // check self.box_map_struct entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "443": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "444": {
      "op": "pushint 28 // 28",
      "defined_out": [
        "28",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "28"
      ]
    },
    "446": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "447": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "1"
      ]
    },
    "448": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ]
    },
    "449": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "450": {
      "op": "replace2 28",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "452": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "454": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "455": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "456": {
      "op": "dup2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0 (copy)"
      ]
    },
    "457": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "458": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "459": {
      "op": "intc_2 // 60",
      "defined_out": [
        "60",
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)",
        "60"
      ]
    },
    "460": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0"
      ]
    },
    "461": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "463": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "464": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "466": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "item_start_offset%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)"
      ]
    },
    "468": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%0#0 (copy)",
        "item_end_offset%0#0"
      ]
    },
    "470": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "tmp%4#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "tmp%4#0"
      ]
    },
    "471": {
      "op": "extract 2 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "expr_value_trimmed%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "474": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0",
        "caller#0 (copy)"
      ]
    },
    "476": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0"
      ]
    },
    "477": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "478": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "479": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "480": {
      "op": "/",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "481": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "482": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "485": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "486": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0"
      ]
    },
    "487": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0"
      ]
    },
    "489": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0"
      ]
    },
    "490": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0",
        "item_start_offset%0#0"
      ]
    },
    "492": {
      "op": "extract3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "493": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "concat_result%0#0"
      ]
    },
    "494": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "495": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "497": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "{box_del}"
      ]
    },
    "498": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "499": {
      "op": "box_put",
      "stack_out": []
    },
    "500": {
      "retsub": true,
      "op": "retsub"
    },
    "501": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.vote_option_3",
      "params": {
        "poll_id#0": "bytes",
        "caller#0": "bytes"
      },
      "block": "vote_option_3",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "504": {
      "op": "frame_dig -2",
      "defined_out": [
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)"
      ]
    },
    "506": {
      "op": "frame_dig -1",
      "defined_out": [
        "caller#0 (copy)",
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)",
        "caller#0 (copy)"
      ]
    },
    "508": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "op": "callsub did_vote",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "511": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "512": {
      "error": "Already voted",
      "op": "assert // Already voted",
      "stack_out": []
    },
    "513": {
      "op": "bytec_0 // \"polls\"",
      "defined_out": [
        "\"polls\""
      ],
      "stack_out": [
        "\"polls\""
      ]
    },
    "514": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"polls\"",
        "poll_id#0 (copy)"
      ]
    },
    "516": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "517": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "518": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "519": {
      "error": "check self.box_map_struct entry exists",
      "op": "assert // check self.box_map_struct entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "520": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "521": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "14"
      ]
    },
    "523": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0"
      ]
    },
    "524": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "526": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0 (copy)",
        "16"
      ]
    },
    "528": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "529": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "531": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "533": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "534": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%2#0",
        "0x0000"
      ]
    },
    "535": {
      "op": "!=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "536": {
      "error": "Option doesn't exist in this poll",
      "op": "assert // Option doesn't exist in this poll",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "537": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "538": {
      "op": "pushint 36 // 36",
      "defined_out": [
        "36",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "36"
      ]
    },
    "540": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ]
    },
    "541": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0",
        "1"
      ]
    },
    "542": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ]
    },
    "543": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "544": {
      "op": "replace2 36",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "546": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "548": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "549": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "550": {
      "op": "dup2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0 (copy)"
      ]
    },
    "551": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "552": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "553": {
      "op": "intc_2 // 60",
      "defined_out": [
        "60",
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)",
        "60"
      ]
    },
    "554": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0"
      ]
    },
    "555": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "557": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "558": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "560": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "item_start_offset%1#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%1#0 (copy)"
      ]
    },
    "562": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%1#0 (copy)",
        "item_end_offset%1#0"
      ]
    },
    "564": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "tmp%6#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "tmp%6#0"
      ]
    },
    "565": {
      "op": "extract 2 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "expr_value_trimmed%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "568": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "expr_value_trimmed%0#0",
        "caller#0 (copy)"
      ]
    },
    "570": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0"
      ]
    },
    "571": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "572": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "573": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "574": {
      "op": "/",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "len_%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "575": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "576": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "len_16_bit%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "579": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "580": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concat_result%0#0"
      ]
    },
    "581": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "concat_result%0#0",
        "updated_data%0#0"
      ]
    },
    "583": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0"
      ]
    },
    "584": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0",
        "item_start_offset%1#0"
      ]
    },
    "586": {
      "op": "extract3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "587": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "concat_result%0#0"
      ]
    },
    "588": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "589": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "591": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "{box_del}"
      ]
    },
    "592": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "593": {
      "op": "box_put",
      "stack_out": []
    },
    "594": {
      "retsub": true,
      "op": "retsub"
    },
    "595": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.vote_option_4",
      "params": {
        "poll_id#0": "bytes",
        "caller#0": "bytes"
      },
      "block": "vote_option_4",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "598": {
      "op": "frame_dig -2",
      "defined_out": [
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)"
      ]
    },
    "600": {
      "op": "frame_dig -1",
      "defined_out": [
        "caller#0 (copy)",
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)",
        "caller#0 (copy)"
      ]
    },
    "602": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "op": "callsub did_vote",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "605": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "606": {
      "error": "Already voted",
      "op": "assert // Already voted",
      "stack_out": []
    },
    "607": {
      "op": "bytec_0 // \"polls\"",
      "defined_out": [
        "\"polls\""
      ],
      "stack_out": [
        "\"polls\""
      ]
    },
    "608": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"polls\"",
        "poll_id#0 (copy)"
      ]
    },
    "610": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "611": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "612": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "613": {
      "error": "check self.box_map_struct entry exists",
      "op": "assert // check self.box_map_struct entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "614": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "615": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "16"
      ]
    },
    "617": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0"
      ]
    },
    "618": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "620": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0 (copy)",
        "18"
      ]
    },
    "622": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "623": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "625": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "627": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "628": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%2#0",
        "0x0000"
      ]
    },
    "629": {
      "op": "!=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "630": {
      "error": "Option doesn't exist in this poll",
      "op": "assert // Option doesn't exist in this poll",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "631": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "632": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "44"
      ]
    },
    "634": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ]
    },
    "635": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0",
        "1"
      ]
    },
    "636": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ]
    },
    "637": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "638": {
      "op": "replace2 44",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "640": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "642": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "643": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "644": {
      "op": "dup2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0 (copy)"
      ]
    },
    "645": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "646": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "647": {
      "op": "intc_2 // 60",
      "defined_out": [
        "60",
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)",
        "60"
      ]
    },
    "648": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0"
      ]
    },
    "649": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "651": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "652": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "654": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "item_start_offset%1#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%1#0 (copy)"
      ]
    },
    "656": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%1#0 (copy)",
        "item_end_offset%1#0"
      ]
    },
    "658": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "tmp%6#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "tmp%6#0"
      ]
    },
    "659": {
      "op": "extract 2 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "expr_value_trimmed%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "662": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "expr_value_trimmed%0#0",
        "caller#0 (copy)"
      ]
    },
    "664": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0"
      ]
    },
    "665": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "666": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "667": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "668": {
      "op": "/",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "len_%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "669": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "670": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "len_16_bit%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "673": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "674": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concat_result%0#0"
      ]
    },
    "675": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "concat_result%0#0",
        "updated_data%0#0"
      ]
    },
    "677": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0"
      ]
    },
    "678": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0",
        "item_start_offset%1#0"
      ]
    },
    "680": {
      "op": "extract3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "681": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "concat_result%0#0"
      ]
    },
    "682": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "683": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "685": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "{box_del}"
      ]
    },
    "686": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "687": {
      "op": "box_put",
      "stack_out": []
    },
    "688": {
      "retsub": true,
      "op": "retsub"
    },
    "689": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.vote_option_5",
      "params": {
        "poll_id#0": "bytes",
        "caller#0": "bytes"
      },
      "block": "vote_option_5",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "692": {
      "op": "frame_dig -2",
      "defined_out": [
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)"
      ]
    },
    "694": {
      "op": "frame_dig -1",
      "defined_out": [
        "caller#0 (copy)",
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "poll_id#0 (copy)",
        "caller#0 (copy)"
      ]
    },
    "696": {
      "callsub": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "op": "callsub did_vote",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "699": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "700": {
      "error": "Already voted",
      "op": "assert // Already voted",
      "stack_out": []
    },
    "701": {
      "op": "bytec_0 // \"polls\"",
      "defined_out": [
        "\"polls\""
      ],
      "stack_out": [
        "\"polls\""
      ]
    },
    "702": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"polls\"",
        "poll_id#0 (copy)"
      ]
    },
    "704": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "705": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "706": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "707": {
      "error": "check self.box_map_struct entry exists",
      "op": "assert // check self.box_map_struct entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "708": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "709": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "18"
      ]
    },
    "711": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0"
      ]
    },
    "712": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "714": {
      "op": "intc_2 // 60",
      "defined_out": [
        "60",
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0 (copy)",
        "60"
      ]
    },
    "715": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "716": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "718": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "720": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "721": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%2#0",
        "0x0000"
      ]
    },
    "722": {
      "op": "!=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "723": {
      "error": "Option doesn't exist in this poll",
      "op": "assert // Option doesn't exist in this poll",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "724": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "725": {
      "op": "pushint 52 // 52",
      "defined_out": [
        "52",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "52"
      ]
    },
    "727": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ]
    },
    "728": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "tmp%5#0",
        "1"
      ]
    },
    "729": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "to_encode%0#0"
      ]
    },
    "730": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "731": {
      "op": "replace2 52",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "733": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "735": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "736": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "737": {
      "op": "dup2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "box_prefixed_key%0#0 (copy)",
        "updated_data%0#0 (copy)"
      ]
    },
    "738": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "739": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "740": {
      "op": "intc_2 // 60",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "updated_data%0#0 (copy)",
        "60"
      ]
    },
    "741": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0"
      ]
    },
    "742": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "744": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "745": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "747": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "item_start_offset%1#0 (copy)",
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%1#0 (copy)"
      ]
    },
    "749": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0 (copy)",
        "item_start_offset%1#0 (copy)",
        "item_end_offset%1#0"
      ]
    },
    "751": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "tmp%6#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "tmp%6#0"
      ]
    },
    "752": {
      "op": "extract 2 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "expr_value_trimmed%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "755": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "expr_value_trimmed%0#0",
        "caller#0 (copy)"
      ]
    },
    "757": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0"
      ]
    },
    "758": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "759": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "760": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "761": {
      "op": "/",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "len_%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "762": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "763": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concatenated%0#0",
        "item_start_offset%1#0",
        "len_16_bit%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "766": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "767": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0",
        "item_start_offset%1#0",
        "concat_result%0#0"
      ]
    },
    "768": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "concat_result%0#0",
        "updated_data%0#0"
      ]
    },
    "770": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "item_start_offset%1#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0"
      ]
    },
    "771": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "0",
        "item_start_offset%1#0"
      ]
    },
    "773": {
      "op": "extract3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "774": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "concat_result%0#0"
      ]
    },
    "775": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "776": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "778": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0",
        "{box_del}"
      ]
    },
    "779": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "780": {
      "op": "box_put",
      "stack_out": []
    },
    "781": {
      "retsub": true,
      "op": "retsub"
    },
    "782": {
      "subroutine": "smart_contracts.poll_manager.contract.PollManager.did_vote",
      "params": {
        "poll_id#0": "bytes",
        "caller#0": "bytes"
      },
      "block": "did_vote",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "785": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "found#5"
      ]
    },
    "787": {
      "op": "intc_1 // 0"
    },
    "788": {
      "op": "bytec_0 // \"polls\""
    },
    "789": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"polls\"",
        "found#0",
        "poll_id#0 (copy)"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "\"polls\"",
        "poll_id#0 (copy)"
      ]
    },
    "791": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "found#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "box_prefixed_key%0#0"
      ]
    },
    "792": {
      "op": "box_get",
      "defined_out": [
        "found#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "793": {
      "error": "check self.box_map_struct entry exists",
      "op": "assert // check self.box_map_struct entry exists",
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0"
      ]
    },
    "794": {
      "op": "dup",
      "defined_out": [
        "found#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "795": {
      "op": "intc_2 // 60",
      "defined_out": [
        "60",
        "found#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "60"
      ]
    },
    "796": {
      "op": "extract_uint16",
      "defined_out": [
        "found#0",
        "item_start_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0",
        "item_start_offset%0#0"
      ]
    },
    "797": {
      "op": "dig 1",
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "799": {
      "op": "len",
      "defined_out": [
        "found#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "800": {
      "op": "substring3",
      "defined_out": [
        "found#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0"
      ]
    },
    "801": {
      "op": "dup",
      "defined_out": [
        "found#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "802": {
      "op": "intc_1 // 0",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "tmp%0#0",
        "0"
      ]
    },
    "803": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "found#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0"
      ]
    },
    "804": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_length%0#0",
        "found#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "805": {
      "block": "did_vote_for_header@1",
      "stack_in": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "807": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "809": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "810": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "found#5",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0",
        "found#5"
      ]
    },
    "812": {
      "op": "frame_bury 0",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "found#5",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "814": {
      "op": "bz did_vote_after_for@6",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "817": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "found#5",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "819": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "found#5",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "822": {
      "op": "frame_dig 4",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "824": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "found#5",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "32"
      ]
    },
    "825": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "found#5",
        "item_index_internal%0#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "826": {
      "op": "intc_3 // 32",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "32"
      ]
    },
    "827": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "array_length%0#0",
        "found#5",
        "item_index_internal%0#0",
        "tmp%0#0",
        "voter#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "voter#0"
      ]
    },
    "828": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length%0#0",
        "caller#0 (copy)",
        "found#5",
        "item_index_internal%0#0",
        "tmp%0#0",
        "voter#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "voter#0",
        "caller#0 (copy)"
      ]
    },
    "830": {
      "op": "==",
      "defined_out": [
        "array_length%0#0",
        "found#5",
        "item_index_internal%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "831": {
      "op": "bz did_vote_after_if_else@4",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "834": {
      "op": "intc_0 // 1",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "found#5"
      ]
    },
    "835": {
      "op": "frame_bury 0",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "837": {
      "block": "did_vote_after_for@6",
      "stack_in": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "found#0"
      ]
    },
    "838": {
      "block": "did_vote_after_if_else@4",
      "stack_in": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "840": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "841": {
      "op": "+",
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "842": {
      "op": "frame_bury 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "found#5",
        "found#0",
        "tmp%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "844": {
      "op": "b did_vote_for_header@1"
    }
  }
}